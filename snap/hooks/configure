#!/bin/bash

set -eux

# Setup LXD

# copy bash completions to host system
cp -a "$SNAP"/bash_completions/* /usr/share/bash-completion/completions/. || true

mkdir -p /usr/lib/sysctl.d
cat <<EOF >/usr/lib/sysctl.d/60-conjure-up.conf
fs.inotify.max_user_instances=1048576
fs.inotify.max_queued_events=1048576
fs.inotify.max_user_watches=1048576
vm.max_map_count=262144
net.ipv4.ip_forward=1
EOF

sysctl -p /usr/lib/sysctl.d/60-conjure-up.conf

# Cleanup from previous versions
if [[ -f /etc/ld.so.conf.d/conjure-up.conf ]]; then
    rm -f /etc/ld.so.conf.d/conjure-up.conf
    ldconfig
fi

if [[ -f /etc/systemd/system/conjure-up.service ]]; then
    systemctl stop conjure-up.service
    rm -f /etc/systemd/system/conjure-up.service
fi

if [[ -d /usr/lib/conjure-up ]]; then
    rm -rf /usr/lib/conjure-up
fi

if [[ ! -f /snap/bin/juju ]]; then
    # "Fake" a snap alias.  We can't use `snap alias` here because the snap
    # system isn't re-entrant during snap install, so instead we manually
    # create a symlink.  This has the downside of not showing up in the
    # list of `snap aliases` but the up-side that it automatically defers
    # to the juju snap if that is installed later.
    ln -s conjure-up.juju /snap/bin/juju
fi

# Make sure the LXD group exists as we don't want to assume users have installed
# LXD from a deb package or previous snap
groupadd lxd || true

# Make sure that LXD ownership is correct
if [[ -d $SNAP_COMMON/lxd ]]; then
    chown root:root "$SNAP_COMMON/lxd"
fi

if [[ -f $SNAP_COMMON/lxd/unix.socket ]]; then
    chown root:lxd "$SNAP_COMMON/lxd/unix.socket"
    chmod 0660 "$SNAP_COMMON/lxd/unix.socket"
fi

if ! "conjure-up.lxc network show conjureup0|grep -q 'managed: true'"; then
    ip link delete conjureup0 type bridge || true
fi

if ! "conjure-up.lxc network show conjureup1|grep -q 'managed: true'"; then
    ip link delete conjureup1 type bridge || true
fi
